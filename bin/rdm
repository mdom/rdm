#!/bin/sh

die() {
    printf "%s: %s\n" "${0##*/}" "$1" >&2
    exit "${2:-1}"
}

main() {

    trap cleanup EXIT INT

    formatter="pandoc -f textile -t markdown"

    # shellcheck disable=SC1090
    [ -f ~/.rdmrc ] && . ~/.rdmrc

    base_url="${RDM_BASE_URL:-$base_url}"
    project="${RDM_PROJECT:-$project}"
    key="${RDM_APIKEY:-$key}"

    while [ -n "$1" ]; do
        case $1 in
            --project)
                 project=$2
                 shift 2
                 ;;
            --base-url)
                 base_url=$2
                 shift 2
                 ;;
            --api-key)
                 key=$2
                 shift 2
                 ;;
            --*) die "Unknown parameter '$1'" ;;
            *) break ;;
        esac
    done

    [ -z "$key" ]      && die "Required parameter --api-key missing"
    [ -z "$project" ]  && die "Required parameter --project missing"
    [ -z "$base_url" ] && die "Required parameter --base-url missing"

    tmpfile="$(mktemp -t "${0##*/}_XXXXXXXXX")"

    if [ -z "$1" ]; then
        die "Usage: ${0##*/} list|edit|view|open|yank|attach [PAGE] [FILES...]"
    fi

    cmd=$1
    shift

    case $cmd in
          list) list_pages "$@" ;;
          edit) edit_page "$@" ;;
          view) view_page "$@" ;;
          open) open_page "$@" ;;
          yank) yank_page "$@" ;;
        attach) attach "$@" ;;
             *) die "Unknown subcommand '$cmd'" ;;
    esac
}

cleanup() {
    ret=$?
    rm -f "$tmpfile"
    exit "$ret"
}

api() {
    url="$base_url/projects/$project/wiki/$1.json?key=$key"
    shift
    curl --silent --header 'Content-Type: application/json' "$@" "$url" \
        || die "curl returned with exit code $?"
}

list_pages() {
    api "index" | jq -r '.wiki_pages|.[]|.title'
}

select_page() {
    if [ -n "$1" ]; then
        echo "$1"
        return
    fi
    title="$("$0" list | fzf --print-query | tail -1)"
    if [ -z "$title" ]; then
        die "No page selected"
    fi
    echo "$title"
}

open_page() {
    title="$(select_page "$1")"
    xdg-open "$base_url/projects/$project/wiki/$title"
}

yank_page() {
    title="$(select_page "$1")"
    echo "$base_url/projects/$project/wiki/$title" | xclip
}

view_page() {
    title="$(select_page "$1")"
    api "$title" --fail | jq -r '.wiki_page|.text' | $formatter | ${less_cmd:-less -F --no-init}
}

edit_page() {
    title="$1"
    if [ -z "$title" ]; then
        title="$(select_page)"
    fi
    api "$title" | jq -r '.wiki_page|.text' | tr -d '\r' >"$tmpfile"
    old_text="$(cat "$tmpfile")"

    while true; do
        ${EDITOR:-vi} "$tmpfile" || return
        [ -s "$tmpfile" ]        || return

        new_text="$(cat "$tmpfile")"
        [ "$old_text" != "$new_text" ] || return

        while true; do
            save_page_menu

            case $_ret in
                y) break 2 ;;
                n) return ;;
                d) echo "$old_text" | diff -u - "$tmpfile" ;;
                e) continue 2 ;;
            esac
        done
    done

    jq -n --arg text "$new_text" '{ wiki_page: {text: $text }}' \
        | api "$1" -X PUT --data @-
}

upload() {
    url="$base_url/uploads.json?key=$key"
    for file; do
        curl -X POST --data "@$file" --silent --header 'Content-Type: application/octet-stream' "$url" \
            | jq --arg file "${file##*/}" -r '.upload | .token + " " + $file'
    done
}

attach() {
    title="$1"
    shift
    text="$(api "$title" | jq -r '.wiki_page|.text' | tr -d '\r')"
    upload "$@" | jq -Rn --arg text "$text" \
        '{ wiki_page: { 
            text: $text,
            uploads: [
                inputs | split(" ") | {token: .[0], filename: .[1]}
            ]
        }}' \
        | api "$title" --fail -X PUT --data @-
}

save_page_menu() {
    while true; do
        printf "%s" "Save page [y,n,e,d,?]? "
        read -r _ret
        case $_ret in
            y | n | e | d)
                return
                ;;
            ?)
                printf "%s - %s\n" \
                    "y" "save page" \
                    "n" "discard changes" \
                    "e" "edit page" \
                    "d" "diff page" \
                    "?" "show help"
                ;;
        esac
    done
}

main "$@"
